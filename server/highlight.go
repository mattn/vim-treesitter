package main

var symbols = map[string]map[string]string {
	"bash": {
		"simple_expansion": "TSNone",
		"expansion": "TSNone",
		"heredoc_start": "TSPunctDelimiter",
		"string": "TSString",
		"raw_string": "TSString",
		"heredoc_body": "TSString",
		"special_variable_name": "TSConstant",
		"comment": "TSComment",
		"test_operator": "TSString",
		"variable_name": "TSVariable",
		"regex": "TSStringRegex",
	},
	"c": {
		"identifier": "TSVariable",
		"preproc_directive": "TSKeyword",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"string_literal": "TSString",
		"system_lib_string": "TSString",
		"escape_sequence": "TSStringEscape",
		"null": "TSConstBuiltin",
		"number_literal": "TSNumber",
		"char_literal": "TSCharacter",
		"preproc_arg": "TSFunctionMacro",
		"preproc_defined": "TSFunctionMacro",
		"statement_identifier": "TSLabel",
		"type_identifier": "TSType",
		"primitive_type": "TSType",
		"sized_type_specifier": "TSType",
		"type_descriptor": "TSType",
		"comment": "TSComment",
		"preproc_params": "TSParameter",
		"ERROR": "TSError",
	},
	"cpp": {
		"identifier": "TSVariable",
		"preproc_directive": "TSKeyword",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"string_literal": "TSString",
		"system_lib_string": "TSString",
		"escape_sequence": "TSStringEscape",
		"null": "TSConstBuiltin",
		"number_literal": "TSNumber",
		"char_literal": "TSCharacter",
		"preproc_arg": "TSFunctionMacro",
		"preproc_defined": "TSFunctionMacro",
		"statement_identifier": "TSLabel",
		"type_identifier": "TSType",
		"primitive_type": "TSType",
		"sized_type_specifier": "TSType",
		"type_descriptor": "TSType",
		"comment": "TSComment",
		"preproc_params": "TSParameter",
		"ERROR": "TSError",
		"namespace_identifier": "TSNamespace",
		"operator_name": "TSFunction",
		"this": "TSVariableBuiltin",
		"nullptr": "TSConstant",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"raw_string_literal": "TSString",
		"auto": "TSKeyword",
		"attribute": "TSAttribute",
	},
	"csharp": {
	},
	"css": {
		"at_keyword": "TSKeyword",
		"to": "TSKeyword",
		"from": "TSKeyword",
		"important": "TSKeyword",
		"comment": "TSComment",
		"tag_name": "TSType",
		"nesting_selector": "TSType",
		"universal_selector": "TSType",
		"function_name": "TSFunction",
		"class_name": "TSProperty",
		"id_name": "TSProperty",
		"namespace_name": "TSProperty",
		"property_name": "TSProperty",
		"feature_name": "TSProperty",
		"attribute_name": "TSProperty",
		"string_value": "TSString",
		"color_value": "TSString",
		"unit": "TSString",
		"integer_value": "TSNumber",
		"float_value": "TSNumber",
		"ERROR": "TSError",
	},
	"dockerfile": {
		"comment": "TSComment",
		"double_quoted_string": "TSString",
	},
	"ecma": {
		"identifier": "TSVariable",
		"property_identifier": "TSProperty",
		"shorthand_property_identifier": "TSProperty",
		"this": "TSVariableBuiltin",
		"super": "TSVariableBuiltin",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"null": "TSConstBuiltin",
		"comment": "TSComment",
		"string": "TSString",
		"regex": "TSPunctDelimiter",
		"regex_pattern": "TSStringRegex",
		"template_string": "TSString",
		"number": "TSNumber",
		"template_substitution": "TSNone",
	},
	"elm": {
	},
	"go": {
		"type_identifier": "TSType",
		"field_identifier": "TSProperty",
		"identifier": "TSVariable",
		"package_identifier": "TSVariable",
		"interpreted_string_literal": "TSString",
		"raw_string_literal": "TSString",
		"rune_literal": "TSString",
		"escape_sequence": "TSStringEscape",
		"int_literal": "TSNumber",
		"float_literal": "TSFloat",
		"imaginary_literal": "TSNumber",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"nil": "TSConstBuiltin",
		"comment": "TSComment",
		"ERROR": "TSError",
	},
	"hcl": {
		"ellipsis": "TSPunctSpecial",
		"quoted_template_start": "TSString",
		"quoted_template_end": "TSString",
		"template_literal": "TSString",
		"heredoc_identifier": "TSPunctDelimiter",
		"heredoc_start": "TSPunctDelimiter",
		"numeric_lit": "TSNumber",
		"bool_lit": "TSBoolean",
		"null_lit": "TSConstant",
		"comment": "TSComment",
		"identifier": "TSVariable",
		"ERROR": "TSError",
	},
	"html": {
		"tag_name": "TSTag",
		"erroneous_end_tag_name": "TSError",
		"comment": "TSComment",
		"attribute_name": "TSProperty",
		"attribute_value": "TSString",
		"quoted_attribute_value": "TSString",
		"text": "TSNone",
		"doctype": "TSConstant",
	},
	"html_tags": {
		"tag_name": "TSTag",
		"erroneous_end_tag_name": "TSError",
		"comment": "TSComment",
		"attribute_name": "TSProperty",
		"attribute_value": "TSString",
		"quoted_attribute_value": "TSString",
		"text": "TSNone",
	},
	"java": {
		"identifier": "TSVariable",
		"super": "TSFunctionBuiltin",
		"type_identifier": "TSType",
		"boolean_type": "TSTypeBuiltin",
		"integral_type": "TSTypeBuiltin",
		"floating_point_type": "TSTypeBuiltin",
		"void_type": "TSTypeBuiltin",
		"this": "TSVariableBuiltin",
		"hex_integer_literal": "TSNumber",
		"decimal_integer_literal": "TSNumber",
		"octal_integer_literal": "TSNumber",
		"binary_integer_literal": "TSNumber",
		"decimal_floating_point_literal": "TSFloat",
		"hex_floating_point_literal": "TSFloat",
		"character_literal": "TSCharacter",
		"string_literal": "TSString",
		"null_literal": "TSConstBuiltin",
		"comment": "TSComment",
		"true": "TSBoolean",
		"false": "TSBoolean",
	},
	"javascript": {
		"identifier": "TSVariable",
		"property_identifier": "TSProperty",
		"shorthand_property_identifier": "TSProperty",
		"this": "TSVariableBuiltin",
		"super": "TSVariableBuiltin",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"null": "TSConstBuiltin",
		"comment": "TSComment",
		"string": "TSString",
		"regex": "TSPunctDelimiter",
		"regex_pattern": "TSStringRegex",
		"template_string": "TSString",
		"number": "TSNumber",
		"template_substitution": "TSNone",
		"jsx_text": "TSNone",
	},
	"json": {
		"true": "TSBoolean",
		"false": "TSBoolean",
		"null": "TSConstBuiltin",
		"number": "TSNumber",
		"ERROR": "TSError",
	},
	"jsx": {
		"jsx_text": "TSNone",
	},
	"lua": {
		"self": "TSVariableBuiltin",
		"break_statement": "TSKeyword",
		"identifier": "TSVariable",
		"false": "TSBoolean",
		"true": "TSBoolean",
		"nil": "TSConstBuiltin",
		"spread": "TSConstant",
		"property_identifier": "TSProperty",
		"method": "TSMethod",
		"comment": "TSComment",
		"string": "TSString",
		"number": "TSNumber",
		"label_statement": "TSLabel",
		"shebang": "TSComment",
		"ERROR": "TSError",
	},
	"ocaml": {
		"module_name": "TSNamespace",
		"module_type_name": "TSNamespace",
		"class_name": "TSType",
		"class_type_name": "TSType",
		"type_constructor": "TSType",
		"constructor_name": "TSConstructor",
		"tag": "TSConstructor",
		"method_name": "TSMethod",
		"value_name": "TSVariable",
		"type_variable": "TSVariable",
		"value_pattern": "TSParameter",
		"label_name": "TSProperty",
		"field_name": "TSProperty",
		"instance_variable_name": "TSProperty",
		"boolean": "TSConstant",
		"unit": "TSConstant",
		"number": "TSNumber",
		"signed_number": "TSNumber",
		"character": "TSCharacter",
		"string": "TSString",
		"quoted_string": "TSString",
		"escape_sequence": "TSStringEscape",
		"conversion_specification": "TSPunctSpecial",
		"pretty_printing_indication": "TSPunctSpecial",
		"prefix_operator": "TSOperator",
		"sign_operator": "TSOperator",
		"infix_operator": "TSOperator",
		"hash_operator": "TSOperator",
		"indexing_operator": "TSOperator",
		"let_operator": "TSOperator",
		"and_operator": "TSOperator",
		"match_operator": "TSOperator",
		"attribute_id": "TSProperty",
		"comment": "TSComment",
		"line_number_directive": "TSComment",
		"directive": "TSComment",
		"shebang": "TSComment",
		"ERROR": "TSError",
	},
	"php": {
		"variable_name": "TSVariable",
		"primitive_type": "TSTypeBuiltin",
		"cast_type": "TSTypeBuiltin",
		"named_type": "TSType",
		"relative_scope": "TSVariableBuiltin",
		"string": "TSString",
		"heredoc": "TSString",
		"boolean": "TSBoolean",
		"null": "TSConstBuiltin",
		"integer": "TSNumber",
		"float": "TSFloat",
		"comment": "TSComment",
		"php_tag": "TSPunctBracket",
		"ERROR": "TSError",
	},
	"python": {
		"identifier": "TSVariable",
		"interpolation": "TSNone",
		"decorator": "TSFunction",
		"none": "TSConstBuiltin",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"integer": "TSNumber",
		"float": "TSFloat",
		"comment": "TSComment",
		"string": "TSString",
		"escape_sequence": "TSStringEscape",
		"ellipsis": "TSPunctDelimiter",
		"ERROR": "TSError",
	},
	"ruby": {
		"identifier": "TSVariable",
		"interpolation": "TSNone",
		"constant": "TSType",
		"class_variable": "TSLabel",
		"instance_variable": "TSLabel",
		"self": "TSVariableBuiltin",
		"super": "TSVariableBuiltin",
		"string": "TSString",
		"bare_string": "TSString",
		"subshell": "TSString",
		"heredoc_body": "TSString",
		"bare_symbol": "TSConstant",
		"heredoc_beginning": "TSConstant",
		"heredoc_end": "TSConstant",
		"simple_symbol": "TSSymbol",
		"delimited_symbol": "TSSymbol",
		"hash_key_symbol": "TSSymbol",
		"regex": "TSStringRegex",
		"escape_sequence": "TSStringEscape",
		"integer": "TSNumber",
		"float": "TSFloat",
		"nil": "TSBoolean",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"comment": "TSComment",
		"ERROR": "TSError",
	},
	"rust": {
		"identifier": "TSVariable",
		"type_identifier": "TSType",
		"primitive_type": "TSTypeBuiltin",
		"field_identifier": "TSField",
		"crate": "TSNamespace",
		"metavariable": "TSFunctionMacro",
		"line_comment": "TSComment",
		"block_comment": "TSComment",
		"self": "TSVariableBuiltin",
		"mutable_specifier": "TSKeyword",
		"super": "TSKeyword",
		"char_literal": "TSString",
		"string_literal": "TSString",
		"raw_string_literal": "TSString",
		"boolean_literal": "TSBoolean",
		"integer_literal": "TSNumber",
		"float_literal": "TSFloat",
		"escape_sequence": "TSStringEscape",
	},
	"svelte": {
		"tag_name": "TSTag",
		"erroneous_end_tag_name": "TSError",
		"comment": "TSComment",
		"attribute_name": "TSProperty",
		"attribute_value": "TSString",
		"quoted_attribute_value": "TSString",
		"text": "TSNone",
		"raw_text_expr": "TSNone",
		"special_block_keyword": "TSKeyword",
		"then": "TSKeyword",
		"as": "TSKeyword",
	},
	"toml": {
		"bare_key": "TSTypeBuiltin",
		"string": "TSString",
		"boolean": "TSConstBuiltin",
		"integer": "TSNumber",
		"float": "TSFloat",
		"comment": "TSComment",
		"ERROR": "TSError",
	},
	"tsx": {
		"type_identifier": "TSType",
		"predefined_type": "TSTypeBuiltin",
		"undefined": "TSVariableBuiltin",
		"jsx_text": "TSNone",
	},
	"typescript": {
		"identifier": "TSVariable",
		"property_identifier": "TSProperty",
		"shorthand_property_identifier": "TSProperty",
		"this": "TSVariableBuiltin",
		"super": "TSVariableBuiltin",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"null": "TSConstBuiltin",
		"comment": "TSComment",
		"string": "TSString",
		"regex": "TSPunctDelimiter",
		"regex_pattern": "TSStringRegex",
		"template_string": "TSString",
		"number": "TSNumber",
		"template_substitution": "TSNone",
		"type_identifier": "TSType",
		"predefined_type": "TSTypeBuiltin",
		"undefined": "TSVariableBuiltin",
	},
	"yaml": {
		"boolean_scalar": "TSBoolean",
		"null_scalar": "TSConstBuiltin",
		"double_quote_scalar": "TSString",
		"single_quote_scalar": "TSString",
		"escape_sequence": "TSStringEscape",
		"integer_scalar": "TSNumber",
		"float_scalar": "TSNumber",
		"comment": "TSComment",
		"anchor_name": "TSType",
		"alias_name": "TSType",
		"tag": "TSType",
		"yaml_directive": "TSKeyword",
		"ERROR": "TSError",
	},
}
var keywords = map[string]map[string]string {
	"bash": {
		"function": "TSKeywordFunction",
	},
	"c": {
		"return": "TSKeywordReturn",
		"#define": "TSConstMacro",
		"#include": "TSInclude",
		"...": "TSPunctSpecial",
	},
	"cpp": {
		"return": "TSKeywordReturn",
		"#define": "TSConstMacro",
		"#include": "TSInclude",
		"...": "TSPunctSpecial",
		"::": "TSOperator",
	},
	"csharp": {
	},
	"css": {
	},
	"dockerfile": {
	},
	"ecma": {
		"...": "TSPunctSpecial",
		";": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"?.": "TSPunctDelimiter",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
	},
	"elm": {
	},
	"go": {
		"func": "TSKeywordFunction",
		"return": "TSKeywordReturn",
		"for": "TSRepeat",
		".": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		":": "TSPunctDelimiter",
		";": "TSPunctDelimiter",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
	},
	"hcl": {
	},
	"html": {
		"=": "TSOperator",
		"<!": "TSTagDelimiter",
	},
	"html_tags": {
		"=": "TSOperator",
	},
	"java": {
		"import": "TSInclude",
		"package": "TSInclude",
	},
	"javascript": {
		"...": "TSPunctSpecial",
		";": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"?.": "TSPunctDelimiter",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
	},
	"json": {
		",": "TSPunctDelimiter",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
	},
	"jsx": {
	},
	"lua": {
		"return": "TSKeywordReturn",
	},
	"ocaml": {
		"%": "TSPunctSpecial",
	},
	"php": {
		"return": "TSKeywordReturn",
	},
	"python": {
	},
	"ruby": {
		"defined?": "TSFunction",
	},
	"rust": {
		"$": "TSFunctionMacro",
		"return": "TSKeywordReturn",
		"fn": "TSKeywordFunction",
	},
	"svelte": {
		"=": "TSOperator",
	},
	"toml": {
	},
	"tsx": {
	},
	"typescript": {
		"...": "TSPunctSpecial",
		";": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"?.": "TSPunctDelimiter",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
	},
	"yaml": {
	},
}
