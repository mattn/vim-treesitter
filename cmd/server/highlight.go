package main

var symbols = map[string]map[string]string {
	"bash": {
		"simple_expansion": "TSNone",
		"expansion": "TSNone",
		"heredoc_start": "TSPunctDelimiter",
		"string": "TSString",
		"raw_string": "TSString",
		"heredoc_body": "TSString",
		"special_variable_name": "TSConstant",
		"comment": "TSComment",
		"test_operator": "TSString",
		"variable_name": "TSVariable",
		"regex": "TSStringRegex",
	},
	"c": {
		"identifier": "TSVariable",
		"preproc_directive": "TSKeyword",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"string_literal": "TSString",
		"system_lib_string": "TSString",
		"escape_sequence": "TSStringEscape",
		"null": "TSConstBuiltin",
		"number_literal": "TSNumber",
		"char_literal": "TSCharacter",
		"preproc_arg": "TSFunctionMacro",
		"preproc_defined": "TSFunctionMacro",
		"statement_identifier": "TSLabel",
		"type_identifier": "TSType",
		"primitive_type": "TSType",
		"sized_type_specifier": "TSType",
		"type_descriptor": "TSType",
		"comment": "TSComment",
		"preproc_params": "TSParameter",
		"ERROR": "TSError",
	},
	"cpp": {
		"identifier": "TSVariable",
		"preproc_directive": "TSKeyword",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"string_literal": "TSString",
		"system_lib_string": "TSString",
		"escape_sequence": "TSStringEscape",
		"null": "TSConstBuiltin",
		"number_literal": "TSNumber",
		"char_literal": "TSCharacter",
		"preproc_arg": "TSFunctionMacro",
		"preproc_defined": "TSFunctionMacro",
		"statement_identifier": "TSLabel",
		"type_identifier": "TSType",
		"primitive_type": "TSType",
		"sized_type_specifier": "TSType",
		"type_descriptor": "TSType",
		"comment": "TSComment",
		"preproc_params": "TSParameter",
		"ERROR": "TSError",
		"namespace_identifier": "TSNamespace",
		"operator_name": "TSFunction",
		"this": "TSVariableBuiltin",
		"nullptr": "TSConstant",
		"raw_string_literal": "TSString",
		"auto": "TSKeyword",
		"attribute": "TSAttribute",
	},
	"csharp": {
	},
	"css": {
		"at_keyword": "TSKeyword",
		"to": "TSKeyword",
		"from": "TSKeyword",
		"important": "TSKeyword",
		"comment": "TSComment",
		"tag_name": "TSType",
		"nesting_selector": "TSType",
		"universal_selector": "TSType",
		"function_name": "TSFunction",
		"class_name": "TSProperty",
		"id_name": "TSProperty",
		"namespace_name": "TSProperty",
		"property_name": "TSProperty",
		"feature_name": "TSProperty",
		"attribute_name": "TSProperty",
		"string_value": "TSString",
		"color_value": "TSString",
		"unit": "TSString",
		"integer_value": "TSNumber",
		"float_value": "TSNumber",
		"ERROR": "TSError",
	},
	"dockerfile": {
		"comment": "TSComment",
		"double_quoted_string": "TSString",
	},
	"ecma": {
		"identifier": "TSVariable",
		"property_identifier": "TSProperty",
		"shorthand_property_identifier": "TSProperty",
		"this": "TSVariableBuiltin",
		"super": "TSVariableBuiltin",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"null": "TSConstBuiltin",
		"comment": "TSComment",
		"string": "TSString",
		"regex": "TSPunctDelimiter",
		"regex_pattern": "TSStringRegex",
		"template_string": "TSString",
		"number": "TSNumber",
		"template_substitution": "TSNone",
	},
	"elm": {
	},
	"go": {
		"type_identifier": "TSType",
		"field_identifier": "TSProperty",
		"identifier": "TSVariable",
		"package_identifier": "TSVariable",
		"interpreted_string_literal": "TSString",
		"raw_string_literal": "TSString",
		"rune_literal": "TSString",
		"escape_sequence": "TSStringEscape",
		"int_literal": "TSNumber",
		"float_literal": "TSFloat",
		"imaginary_literal": "TSNumber",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"nil": "TSConstBuiltin",
		"comment": "TSComment",
		"ERROR": "TSError",
	},
	"hcl": {
		"ellipsis": "TSPunctSpecial",
		"quoted_template_start": "TSString",
		"quoted_template_end": "TSString",
		"template_literal": "TSString",
		"heredoc_identifier": "TSPunctDelimiter",
		"heredoc_start": "TSPunctDelimiter",
		"numeric_lit": "TSNumber",
		"bool_lit": "TSBoolean",
		"null_lit": "TSConstant",
		"comment": "TSComment",
		"identifier": "TSVariable",
		"ERROR": "TSError",
	},
	"html": {
		"tag_name": "TSTag",
		"erroneous_end_tag_name": "TSError",
		"comment": "TSComment",
		"attribute_name": "TSProperty",
		"attribute_value": "TSString",
		"quoted_attribute_value": "TSString",
		"text": "TSNone",
		"doctype": "TSConstant",
	},
	"html_tags": {
		"tag_name": "TSTag",
		"erroneous_end_tag_name": "TSError",
		"comment": "TSComment",
		"attribute_name": "TSProperty",
		"attribute_value": "TSString",
		"quoted_attribute_value": "TSString",
		"text": "TSNone",
	},
	"java": {
		"identifier": "TSVariable",
		"super": "TSFunctionBuiltin",
		"type_identifier": "TSType",
		"boolean_type": "TSTypeBuiltin",
		"integral_type": "TSTypeBuiltin",
		"floating_point_type": "TSTypeBuiltin",
		"void_type": "TSTypeBuiltin",
		"this": "TSVariableBuiltin",
		"hex_integer_literal": "TSNumber",
		"decimal_integer_literal": "TSNumber",
		"octal_integer_literal": "TSNumber",
		"binary_integer_literal": "TSNumber",
		"decimal_floating_point_literal": "TSFloat",
		"hex_floating_point_literal": "TSFloat",
		"character_literal": "TSCharacter",
		"string_literal": "TSString",
		"null_literal": "TSConstBuiltin",
		"comment": "TSComment",
		"true": "TSBoolean",
		"false": "TSBoolean",
	},
	"javascript": {
		"identifier": "TSVariable",
		"property_identifier": "TSProperty",
		"shorthand_property_identifier": "TSProperty",
		"this": "TSVariableBuiltin",
		"super": "TSVariableBuiltin",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"null": "TSConstBuiltin",
		"comment": "TSComment",
		"string": "TSString",
		"regex": "TSPunctDelimiter",
		"regex_pattern": "TSStringRegex",
		"template_string": "TSString",
		"number": "TSNumber",
		"template_substitution": "TSNone",
		"jsx_text": "TSNone",
	},
	"json": {
		"true": "TSBoolean",
		"false": "TSBoolean",
		"null": "TSConstBuiltin",
		"number": "TSNumber",
		"ERROR": "TSError",
	},
	"jsx": {
		"jsx_text": "TSNone",
	},
	"lua": {
		"self": "TSVariableBuiltin",
		"break_statement": "TSKeyword",
		"identifier": "TSVariable",
		"false": "TSBoolean",
		"true": "TSBoolean",
		"nil": "TSConstBuiltin",
		"spread": "TSConstant",
		"property_identifier": "TSProperty",
		"method": "TSMethod",
		"comment": "TSComment",
		"string": "TSString",
		"number": "TSNumber",
		"label_statement": "TSLabel",
		"shebang": "TSComment",
		"ERROR": "TSError",
	},
	"ocaml": {
		"module_name": "TSNamespace",
		"module_type_name": "TSNamespace",
		"class_name": "TSType",
		"class_type_name": "TSType",
		"type_constructor": "TSType",
		"constructor_name": "TSConstructor",
		"tag": "TSConstructor",
		"method_name": "TSMethod",
		"value_name": "TSVariable",
		"type_variable": "TSVariable",
		"value_pattern": "TSParameter",
		"label_name": "TSProperty",
		"field_name": "TSProperty",
		"instance_variable_name": "TSProperty",
		"boolean": "TSConstant",
		"unit": "TSConstant",
		"number": "TSNumber",
		"signed_number": "TSNumber",
		"character": "TSCharacter",
		"string": "TSString",
		"quoted_string": "TSString",
		"escape_sequence": "TSStringEscape",
		"conversion_specification": "TSPunctSpecial",
		"pretty_printing_indication": "TSPunctSpecial",
		"prefix_operator": "TSOperator",
		"sign_operator": "TSOperator",
		"infix_operator": "TSOperator",
		"hash_operator": "TSOperator",
		"indexing_operator": "TSOperator",
		"let_operator": "TSOperator",
		"and_operator": "TSOperator",
		"match_operator": "TSOperator",
		"attribute_id": "TSProperty",
		"comment": "TSComment",
		"line_number_directive": "TSComment",
		"directive": "TSComment",
		"shebang": "TSComment",
		"ERROR": "TSError",
	},
	"php": {
		"variable_name": "TSVariable",
		"primitive_type": "TSTypeBuiltin",
		"cast_type": "TSTypeBuiltin",
		"named_type": "TSType",
		"relative_scope": "TSVariableBuiltin",
		"string": "TSString",
		"heredoc": "TSString",
		"boolean": "TSBoolean",
		"null": "TSConstBuiltin",
		"integer": "TSNumber",
		"float": "TSFloat",
		"comment": "TSComment",
		"php_tag": "TSPunctBracket",
		"ERROR": "TSError",
	},
	"python": {
		"identifier": "TSVariable",
		"interpolation": "TSNone",
		"decorator": "TSFunction",
		"none": "TSConstBuiltin",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"integer": "TSNumber",
		"float": "TSFloat",
		"comment": "TSComment",
		"string": "TSString",
		"escape_sequence": "TSStringEscape",
		"ellipsis": "TSPunctDelimiter",
		"ERROR": "TSError",
	},
	"ruby": {
		"identifier": "TSVariable",
		"interpolation": "TSNone",
		"constant": "TSType",
		"class_variable": "TSLabel",
		"instance_variable": "TSLabel",
		"self": "TSVariableBuiltin",
		"super": "TSVariableBuiltin",
		"string": "TSString",
		"bare_string": "TSString",
		"subshell": "TSString",
		"heredoc_body": "TSString",
		"bare_symbol": "TSConstant",
		"heredoc_beginning": "TSConstant",
		"heredoc_end": "TSConstant",
		"simple_symbol": "TSSymbol",
		"delimited_symbol": "TSSymbol",
		"hash_key_symbol": "TSSymbol",
		"regex": "TSStringRegex",
		"escape_sequence": "TSStringEscape",
		"integer": "TSNumber",
		"float": "TSFloat",
		"nil": "TSBoolean",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"comment": "TSComment",
		"ERROR": "TSError",
	},
	"rust": {
		"identifier": "TSVariable",
		"type_identifier": "TSType",
		"primitive_type": "TSTypeBuiltin",
		"field_identifier": "TSField",
		"crate": "TSNamespace",
		"metavariable": "TSFunctionMacro",
		"line_comment": "TSComment",
		"block_comment": "TSComment",
		"self": "TSVariableBuiltin",
		"mutable_specifier": "TSKeyword",
		"super": "TSKeyword",
		"char_literal": "TSString",
		"string_literal": "TSString",
		"raw_string_literal": "TSString",
		"boolean_literal": "TSBoolean",
		"integer_literal": "TSNumber",
		"float_literal": "TSFloat",
		"escape_sequence": "TSStringEscape",
	},
	"svelte": {
		"tag_name": "TSTag",
		"erroneous_end_tag_name": "TSError",
		"comment": "TSComment",
		"attribute_name": "TSProperty",
		"attribute_value": "TSString",
		"quoted_attribute_value": "TSString",
		"text": "TSNone",
		"raw_text_expr": "TSNone",
		"special_block_keyword": "TSKeyword",
		"then": "TSKeyword",
		"as": "TSKeyword",
	},
	"toml": {
		"bare_key": "TSTypeBuiltin",
		"string": "TSString",
		"boolean": "TSConstBuiltin",
		"integer": "TSNumber",
		"float": "TSFloat",
		"comment": "TSComment",
		"ERROR": "TSError",
	},
	"tsx": {
		"type_identifier": "TSType",
		"predefined_type": "TSTypeBuiltin",
		"undefined": "TSVariableBuiltin",
		"jsx_text": "TSNone",
	},
	"typescript": {
		"identifier": "TSVariable",
		"property_identifier": "TSProperty",
		"shorthand_property_identifier": "TSProperty",
		"this": "TSVariableBuiltin",
		"super": "TSVariableBuiltin",
		"true": "TSBoolean",
		"false": "TSBoolean",
		"null": "TSConstBuiltin",
		"comment": "TSComment",
		"string": "TSString",
		"regex": "TSPunctDelimiter",
		"regex_pattern": "TSStringRegex",
		"template_string": "TSString",
		"number": "TSNumber",
		"template_substitution": "TSNone",
		"type_identifier": "TSType",
		"predefined_type": "TSTypeBuiltin",
		"undefined": "TSVariableBuiltin",
	},
	"yaml": {
		"boolean_scalar": "TSBoolean",
		"null_scalar": "TSConstBuiltin",
		"double_quote_scalar": "TSString",
		"single_quote_scalar": "TSString",
		"escape_sequence": "TSStringEscape",
		"integer_scalar": "TSNumber",
		"float_scalar": "TSNumber",
		"comment": "TSComment",
		"anchor_name": "TSType",
		"alias_name": "TSType",
		"tag": "TSType",
		"yaml_directive": "TSKeyword",
		"ERROR": "TSError",
	},
}
var keywords = map[string]map[string]string {
	"bash": {
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		";": "TSPunctDelimiter",
		";;": "TSPunctDelimiter",
		"$": "TSPunctSpecial",
		">": "TSOperator",
		"<": "TSOperator",
		"&": "TSOperator",
		"&&": "TSOperator",
		"|": "TSOperator",
		"||": "TSOperator",
		"=": "TSOperator",
		"=~": "TSOperator",
		"==": "TSOperator",
		"!=": "TSOperator",
		"if": "TSConditional",
		"then": "TSConditional",
		"else": "TSConditional",
		"elif": "TSConditional",
		"fi": "TSConditional",
		"case": "TSConditional",
		"in": "TSConditional",
		"esac": "TSConditional",
		"for": "TSRepeat",
		"do": "TSRepeat",
		"done": "TSRepeat",
		"while": "TSRepeat",
		"declare": "TSKeyword",
		"export": "TSKeyword",
		"local": "TSKeyword",
		"readonly": "TSKeyword",
		"unset": "TSKeyword",
		"function": "TSKeywordFunction",
	},
	"c": {
		"const": "TSKeyword",
		"default": "TSKeyword",
		"enum": "TSKeyword",
		"extern": "TSKeyword",
		"inline": "TSKeyword",
		"sizeof": "TSKeyword",
		"static": "TSKeyword",
		"struct": "TSKeyword",
		"typedef": "TSKeyword",
		"union": "TSKeyword",
		"volatile": "TSKeyword",
		"goto": "TSKeyword",
		"register": "TSKeyword",
		"return": "TSKeywordReturn",
		"while": "TSRepeat",
		"for": "TSRepeat",
		"do": "TSRepeat",
		"continue": "TSRepeat",
		"break": "TSRepeat",
		"if": "TSConditional",
		"else": "TSConditional",
		"case": "TSConditional",
		"switch": "TSConditional",
		"#define": "TSConstMacro",
		"#if": "TSKeyword",
		"#ifdef": "TSKeyword",
		"#ifndef": "TSKeyword",
		"#else": "TSKeyword",
		"#elif": "TSKeyword",
		"#endif": "TSKeyword",
		"#include": "TSInclude",
		"=": "TSOperator",
		"-": "TSOperator",
		"*": "TSOperator",
		"/": "TSOperator",
		"+": "TSOperator",
		"%": "TSOperator",
		"~": "TSOperator",
		"|": "TSOperator",
		"&": "TSOperator",
		"^": "TSOperator",
		"<<": "TSOperator",
		">>": "TSOperator",
		"->": "TSOperator",
		"<": "TSOperator",
		"<=": "TSOperator",
		">=": "TSOperator",
		">": "TSOperator",
		"==": "TSOperator",
		"!=": "TSOperator",
		"!": "TSOperator",
		"&&": "TSOperator",
		"||": "TSOperator",
		"-=": "TSOperator",
		"+=": "TSOperator",
		"*=": "TSOperator",
		"/=": "TSOperator",
		"%=": "TSOperator",
		"|=": "TSOperator",
		"&=": "TSOperator",
		"^=": "TSOperator",
		">>=": "TSOperator",
		"<<=": "TSOperator",
		"--": "TSOperator",
		"++": "TSOperator",
		".": "TSPunctDelimiter",
		";": "TSPunctDelimiter",
		":": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"...": "TSPunctSpecial",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
	},
	"cpp": {
		"const": "TSKeyword",
		"default": "TSKeyword",
		"enum": "TSKeyword",
		"extern": "TSKeyword",
		"inline": "TSKeyword",
		"sizeof": "TSKeyword",
		"static": "TSKeyword",
		"struct": "TSKeyword",
		"typedef": "TSKeyword",
		"union": "TSKeyword",
		"volatile": "TSKeyword",
		"goto": "TSKeyword",
		"register": "TSKeyword",
		"return": "TSKeywordReturn",
		"while": "TSRepeat",
		"for": "TSRepeat",
		"do": "TSRepeat",
		"continue": "TSRepeat",
		"break": "TSRepeat",
		"if": "TSConditional",
		"else": "TSConditional",
		"case": "TSConditional",
		"switch": "TSConditional",
		"#define": "TSConstMacro",
		"#if": "TSKeyword",
		"#ifdef": "TSKeyword",
		"#ifndef": "TSKeyword",
		"#else": "TSKeyword",
		"#elif": "TSKeyword",
		"#endif": "TSKeyword",
		"#include": "TSInclude",
		"=": "TSOperator",
		"-": "TSOperator",
		"*": "TSOperator",
		"/": "TSOperator",
		"+": "TSOperator",
		"%": "TSOperator",
		"~": "TSOperator",
		"|": "TSOperator",
		"&": "TSOperator",
		"^": "TSOperator",
		"<<": "TSOperator",
		">>": "TSOperator",
		"->": "TSOperator",
		"<": "TSOperator",
		"<=": "TSOperator",
		">=": "TSOperator",
		">": "TSOperator",
		"==": "TSOperator",
		"!=": "TSOperator",
		"!": "TSOperator",
		"&&": "TSOperator",
		"||": "TSOperator",
		"-=": "TSOperator",
		"+=": "TSOperator",
		"*=": "TSOperator",
		"/=": "TSOperator",
		"%=": "TSOperator",
		"|=": "TSOperator",
		"&=": "TSOperator",
		"^=": "TSOperator",
		">>=": "TSOperator",
		"<<=": "TSOperator",
		"--": "TSOperator",
		"++": "TSOperator",
		".": "TSPunctDelimiter",
		";": "TSPunctDelimiter",
		":": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"...": "TSPunctSpecial",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"try": "TSException",
		"catch": "TSException",
		"noexcept": "TSException",
		"throw": "TSException",
		"class": "TSKeyword",
		"decltype": "TSKeyword",
		"constexpr": "TSKeyword",
		"explicit": "TSKeyword",
		"final": "TSKeyword",
		"friend": "TSKeyword",
		"mutable": "TSKeyword",
		"namespace": "TSKeyword",
		"override": "TSKeyword",
		"private": "TSKeyword",
		"protected": "TSKeyword",
		"public": "TSKeyword",
		"template": "TSKeyword",
		"typename": "TSKeyword",
		"using": "TSKeyword",
		"virtual": "TSKeyword",
		"new": "TSKeywordOperator",
		"delete": "TSKeywordOperator",
		"::": "TSOperator",
	},
	"csharp": {
	},
	"css": {
		"@media": "TSKeyword",
		"@import": "TSKeyword",
		"@charset": "TSKeyword",
		"@namespace": "TSKeyword",
		"@supports": "TSKeyword",
		"@keyframes": "TSKeyword",
		"~": "TSOperator",
		">": "TSOperator",
		"+": "TSOperator",
		"-": "TSOperator",
		"*": "TSOperator",
		"/": "TSOperator",
		"=": "TSOperator",
		"^=": "TSOperator",
		"|=": "TSOperator",
		"~=": "TSOperator",
		"$=": "TSOperator",
		"*=": "TSOperator",
		"and": "TSOperator",
		"or": "TSOperator",
		"not": "TSOperator",
		"only": "TSOperator",
		"#": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		":": "TSPunctDelimiter",
		"::": "TSPunctDelimiter",
		";": "TSPunctDelimiter",
		"{": "TSPunctBracket",
		")": "TSPunctBracket",
		"(": "TSPunctBracket",
		"}": "TSPunctBracket",
	},
	"dockerfile": {
		"FROM": "TSKeyword",
		"AS": "TSKeyword",
		"RUN": "TSKeyword",
		"CMD": "TSKeyword",
		"LABEL": "TSKeyword",
		"EXPOSE": "TSKeyword",
		"ENV": "TSKeyword",
		"ADD": "TSKeyword",
		"COPY": "TSKeyword",
		"ENTRYPOINT": "TSKeyword",
		"VOLUME": "TSKeyword",
		"USER": "TSKeyword",
		"WORKDIR": "TSKeyword",
		"ARG": "TSKeyword",
		"ONBUILD": "TSKeyword",
		"STOPSIGNAL": "TSKeyword",
		"HEALTHCHECK": "TSKeyword",
		"SHELL": "TSKeyword",
		"MAINTAINER": "TSKeyword",
		"CROSS_BUILD": "TSKeyword",
		":": "TSOperator",
		"@": "TSOperator",
	},
	"ecma": {
		"...": "TSPunctSpecial",
		";": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"?.": "TSPunctDelimiter",
		"--": "TSOperator",
		"-": "TSOperator",
		"-=": "TSOperator",
		"&&": "TSOperator",
		"+": "TSOperator",
		"++": "TSOperator",
		"+=": "TSOperator",
		"&=": "TSOperator",
		"/=": "TSOperator",
		"**=": "TSOperator",
		"<<=": "TSOperator",
		"<": "TSOperator",
		"<=": "TSOperator",
		"<<": "TSOperator",
		"=": "TSOperator",
		"==": "TSOperator",
		"===": "TSOperator",
		"!=": "TSOperator",
		"!==": "TSOperator",
		"=>": "TSOperator",
		">": "TSOperator",
		">=": "TSOperator",
		">>": "TSOperator",
		"||": "TSOperator",
		"%": "TSOperator",
		"%=": "TSOperator",
		"*": "TSOperator",
		"**": "TSOperator",
		">>>": "TSOperator",
		"&": "TSOperator",
		"|": "TSOperator",
		"^": "TSOperator",
		"??": "TSOperator",
		"*=": "TSOperator",
		">>=": "TSOperator",
		">>>=": "TSOperator",
		"^=": "TSOperator",
		"|=": "TSOperator",
		"&&=": "TSOperator",
		"||=": "TSOperator",
		"??=": "TSOperator",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"if": "TSConditional",
		"else": "TSConditional",
		"switch": "TSConditional",
		"case": "TSConditional",
		"default": "TSConditional",
		"import": "TSInclude",
		"from": "TSInclude",
		"as": "TSInclude",
		"for": "TSRepeat",
		"of": "TSRepeat",
		"do": "TSRepeat",
		"while": "TSRepeat",
		"continue": "TSRepeat",
		"async": "TSKeyword",
		"await": "TSKeyword",
		"break": "TSKeyword",
		"class": "TSKeyword",
		"const": "TSKeyword",
		"debugger": "TSKeyword",
		"export": "TSKeyword",
		"extends": "TSKeyword",
		"get": "TSKeyword",
		"in": "TSKeyword",
		"instanceof": "TSKeyword",
		"let": "TSKeyword",
		"set": "TSKeyword",
		"static": "TSKeyword",
		"target": "TSKeyword",
		"typeof": "TSKeyword",
		"var": "TSKeyword",
		"void": "TSKeyword",
		"with": "TSKeyword",
		"return": "TSKeywordReturn",
		"yield": "TSKeywordReturn",
		"function": "TSKeywordFunction",
		"new": "TSKeywordOperator",
		"delete": "TSKeywordOperator",
		"throw": "TSException",
		"try": "TSException",
		"catch": "TSException",
		"finally": "TSException",
	},
	"elm": {
	},
	"go": {
		"--": "TSOperator",
		"-": "TSOperator",
		"-=": "TSOperator",
		":=": "TSOperator",
		"!": "TSOperator",
		"!=": "TSOperator",
		"...": "TSOperator",
		"*": "TSOperator",
		"*=": "TSOperator",
		"/": "TSOperator",
		"/=": "TSOperator",
		"&": "TSOperator",
		"&&": "TSOperator",
		"&=": "TSOperator",
		"%": "TSOperator",
		"%=": "TSOperator",
		"^": "TSOperator",
		"^=": "TSOperator",
		"+": "TSOperator",
		"++": "TSOperator",
		"+=": "TSOperator",
		"<-": "TSOperator",
		"<": "TSOperator",
		"<<": "TSOperator",
		"<<=": "TSOperator",
		"<=": "TSOperator",
		"=": "TSOperator",
		"==": "TSOperator",
		">": "TSOperator",
		">=": "TSOperator",
		">>": "TSOperator",
		">>=": "TSOperator",
		"|": "TSOperator",
		"|=": "TSOperator",
		"||": "TSOperator",
		"break": "TSKeyword",
		"chan": "TSKeyword",
		"const": "TSKeyword",
		"continue": "TSKeyword",
		"default": "TSKeyword",
		"defer": "TSKeyword",
		"go": "TSKeyword",
		"goto": "TSKeyword",
		"interface": "TSKeyword",
		"map": "TSKeyword",
		"range": "TSKeyword",
		"select": "TSKeyword",
		"struct": "TSKeyword",
		"type": "TSKeyword",
		"var": "TSKeyword",
		"fallthrough": "TSKeyword",
		"func": "TSKeywordFunction",
		"return": "TSKeywordReturn",
		"for": "TSRepeat",
		"import": "TSInclude",
		"package": "TSInclude",
		"else": "TSConditional",
		"case": "TSConditional",
		"switch": "TSConditional",
		"if": "TSConditional",
		".": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		":": "TSPunctDelimiter",
		";": "TSPunctDelimiter",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
	},
	"hcl": {
		"!": "TSOperator",
		"*": "TSOperator",
		"/": "TSOperator",
		"%": "TSOperator",
		"+": "TSOperator",
		"-": "TSOperator",
		">": "TSOperator",
		">=": "TSOperator",
		"<": "TSOperator",
		"<=": "TSOperator",
		"==": "TSOperator",
		"!=": "TSOperator",
		"&&": "TSOperator",
		"||": "TSOperator",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		".": "TSPunctDelimiter",
		".*": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"[*]": "TSPunctDelimiter",
		"?": "TSPunctSpecial",
		"=>": "TSPunctSpecial",
		":": "TSNone",
		"=": "TSNone",
		"for": "TSRepeat",
		"in": "TSRepeat",
		"if": "TSConditional",
	},
	"html": {
		"<": "TSTagDelimiter",
		">": "TSTagDelimiter",
		"</": "TSTagDelimiter",
		"/>": "TSTagDelimiter",
		"=": "TSOperator",
		"<!": "TSTagDelimiter",
	},
	"html_tags": {
		"<": "TSTagDelimiter",
		">": "TSTagDelimiter",
		"</": "TSTagDelimiter",
		"/>": "TSTagDelimiter",
		"=": "TSOperator",
	},
	"java": {
		"@": "TSOperator",
		"+": "TSOperator",
		":": "TSOperator",
		"++": "TSOperator",
		"-": "TSOperator",
		"--": "TSOperator",
		"&": "TSOperator",
		"&&": "TSOperator",
		"|": "TSOperator",
		"||": "TSOperator",
		"!=": "TSOperator",
		"==": "TSOperator",
		"*": "TSOperator",
		"/": "TSOperator",
		"%": "TSOperator",
		"<": "TSOperator",
		"<=": "TSOperator",
		">": "TSOperator",
		">=": "TSOperator",
		"=": "TSOperator",
		"-=": "TSOperator",
		"+=": "TSOperator",
		"*=": "TSOperator",
		"/=": "TSOperator",
		"%=": "TSOperator",
		"->": "TSOperator",
		"^": "TSOperator",
		"^=": "TSOperator",
		"&=": "TSOperator",
		"|=": "TSOperator",
		"~": "TSOperator",
		">>": "TSOperator",
		">>>": "TSOperator",
		"<<": "TSOperator",
		"::": "TSOperator",
		"abstract": "TSKeyword",
		"assert": "TSKeyword",
		"break": "TSKeyword",
		"class": "TSKeyword",
		"record": "TSKeyword",
		"continue": "TSKeyword",
		"default": "TSKeyword",
		"enum": "TSKeyword",
		"exports": "TSKeyword",
		"extends": "TSKeyword",
		"final": "TSKeyword",
		"implements": "TSKeyword",
		"instanceof": "TSKeyword",
		"interface": "TSKeyword",
		"module": "TSKeyword",
		"native": "TSKeyword",
		"open": "TSKeyword",
		"opens": "TSKeyword",
		"package": "TSKeyword",
		"private": "TSKeyword",
		"protected": "TSKeyword",
		"provides": "TSKeyword",
		"public": "TSKeyword",
		"requires": "TSKeyword",
		"static": "TSKeyword",
		"strictfp": "TSKeyword",
		"synchronized": "TSKeyword",
		"to": "TSKeyword",
		"transient": "TSKeyword",
		"transitive": "TSKeyword",
		"uses": "TSKeyword",
		"volatile": "TSKeyword",
		"with": "TSKeyword",
		"return": "TSKeywordReturn",
		"yield": "TSKeywordReturn",
		"new": "TSKeywordOperator",
		"if": "TSConditional",
		"else": "TSConditional",
		"switch": "TSConditional",
		"case": "TSConditional",
		"for": "TSRepeat",
		"while": "TSRepeat",
		"do": "TSRepeat",
		"import": "TSInclude",
		";": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		"...": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"throw": "TSException",
		"throws": "TSException",
		"finally": "TSException",
		"try": "TSException",
		"catch": "TSException",
	},
	"javascript": {
		"...": "TSPunctSpecial",
		";": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"?.": "TSPunctDelimiter",
		"--": "TSOperator",
		"-": "TSOperator",
		"-=": "TSOperator",
		"&&": "TSOperator",
		"+": "TSOperator",
		"++": "TSOperator",
		"+=": "TSOperator",
		"&=": "TSOperator",
		"/=": "TSOperator",
		"**=": "TSOperator",
		"<<=": "TSOperator",
		"<": "TSOperator",
		"<=": "TSOperator",
		"<<": "TSOperator",
		"=": "TSOperator",
		"==": "TSOperator",
		"===": "TSOperator",
		"!=": "TSOperator",
		"!==": "TSOperator",
		"=>": "TSOperator",
		">": "TSOperator",
		">=": "TSOperator",
		">>": "TSOperator",
		"||": "TSOperator",
		"%": "TSOperator",
		"%=": "TSOperator",
		"*": "TSOperator",
		"**": "TSOperator",
		">>>": "TSOperator",
		"&": "TSOperator",
		"|": "TSOperator",
		"^": "TSOperator",
		"??": "TSOperator",
		"*=": "TSOperator",
		">>=": "TSOperator",
		">>>=": "TSOperator",
		"^=": "TSOperator",
		"|=": "TSOperator",
		"&&=": "TSOperator",
		"||=": "TSOperator",
		"??=": "TSOperator",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"if": "TSConditional",
		"else": "TSConditional",
		"switch": "TSConditional",
		"case": "TSConditional",
		"default": "TSConditional",
		"import": "TSInclude",
		"from": "TSInclude",
		"as": "TSInclude",
		"for": "TSRepeat",
		"of": "TSRepeat",
		"do": "TSRepeat",
		"while": "TSRepeat",
		"continue": "TSRepeat",
		"async": "TSKeyword",
		"await": "TSKeyword",
		"break": "TSKeyword",
		"class": "TSKeyword",
		"const": "TSKeyword",
		"debugger": "TSKeyword",
		"export": "TSKeyword",
		"extends": "TSKeyword",
		"get": "TSKeyword",
		"in": "TSKeyword",
		"instanceof": "TSKeyword",
		"let": "TSKeyword",
		"set": "TSKeyword",
		"static": "TSKeyword",
		"target": "TSKeyword",
		"typeof": "TSKeyword",
		"var": "TSKeyword",
		"void": "TSKeyword",
		"with": "TSKeyword",
		"return": "TSKeywordReturn",
		"yield": "TSKeywordReturn",
		"function": "TSKeywordFunction",
		"new": "TSKeywordOperator",
		"delete": "TSKeywordOperator",
		"throw": "TSException",
		"try": "TSException",
		"catch": "TSException",
		"finally": "TSException",
	},
	"json": {
		",": "TSPunctDelimiter",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
	},
	"jsx": {
	},
	"lua": {
		"else": "TSConditional",
		"elseif": "TSConditional",
		"then": "TSConditional",
		"in": "TSKeyword",
		"local": "TSKeyword",
		"goto": "TSKeyword",
		"return": "TSKeywordReturn",
		"not": "TSKeywordOperator",
		"and": "TSKeywordOperator",
		"or": "TSKeywordOperator",
		"=": "TSOperator",
		"~=": "TSOperator",
		"==": "TSOperator",
		"<=": "TSOperator",
		">=": "TSOperator",
		"<": "TSOperator",
		">": "TSOperator",
		"+": "TSOperator",
		"-": "TSOperator",
		"%": "TSOperator",
		"/": "TSOperator",
		"//": "TSOperator",
		"*": "TSOperator",
		"^": "TSOperator",
		"&": "TSOperator",
		"~": "TSOperator",
		"|": "TSOperator",
		">>": "TSOperator",
		"<<": "TSOperator",
		"..": "TSOperator",
		"#": "TSOperator",
		",": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		":": "TSPunctDelimiter",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
	},
	"ocaml": {
		"and": "TSKeyword",
		"as": "TSKeyword",
		"assert": "TSKeyword",
		"begin": "TSKeyword",
		"class": "TSKeyword",
		"constraint": "TSKeyword",
		"end": "TSKeyword",
		"external": "TSKeyword",
		"in": "TSKeyword",
		"inherit": "TSKeyword",
		"initializer": "TSKeyword",
		"lazy": "TSKeyword",
		"let": "TSKeyword",
		"match": "TSKeyword",
		"method": "TSKeyword",
		"module": "TSKeyword",
		"mutable": "TSKeyword",
		"new": "TSKeyword",
		"nonrec": "TSKeyword",
		"object": "TSKeyword",
		"of": "TSKeyword",
		"private": "TSKeyword",
		"rec": "TSKeyword",
		"sig": "TSKeyword",
		"struct": "TSKeyword",
		"type": "TSKeyword",
		"val": "TSKeyword",
		"virtual": "TSKeyword",
		"when": "TSKeyword",
		"with": "TSKeyword",
		"fun": "TSKeywordFunction",
		"function": "TSKeywordFunction",
		"functor": "TSKeywordFunction",
		"if": "TSConditional",
		"then": "TSConditional",
		"else": "TSConditional",
		"exception": "TSException",
		"try": "TSException",
		"include": "TSInclude",
		"open": "TSInclude",
		"for": "TSRepeat",
		"to": "TSRepeat",
		"downto": "TSRepeat",
		"while": "TSRepeat",
		"do": "TSRepeat",
		"done": "TSRepeat",
		"%": "TSPunctSpecial",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"[|": "TSPunctBracket",
		"|]": "TSPunctBracket",
		"[<": "TSPunctBracket",
		"[>": "TSPunctBracket",
		",": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		";": "TSPunctDelimiter",
		":": "TSPunctDelimiter",
		"=": "TSPunctDelimiter",
		"|": "TSPunctDelimiter",
		"~": "TSPunctDelimiter",
		"?": "TSPunctDelimiter",
		"+": "TSPunctDelimiter",
		"-": "TSPunctDelimiter",
		"!": "TSPunctDelimiter",
		">": "TSPunctDelimiter",
		"&": "TSPunctDelimiter",
		"->": "TSPunctDelimiter",
		";;": "TSPunctDelimiter",
		":>": "TSPunctDelimiter",
		"+=": "TSPunctDelimiter",
		":=": "TSPunctDelimiter",
		"..": "TSPunctDelimiter",
		"*": "TSOperator",
		"#": "TSOperator",
		"::": "TSOperator",
		"<-": "TSOperator",
	},
	"php": {
		"as": "TSKeywordOperator",
		"fn": "TSKeywordFunction",
		"function": "TSKeywordFunction",
		"$": "TSKeyword",
		"abstract": "TSKeyword",
		"break": "TSKeyword",
		"class": "TSKeyword",
		"const": "TSKeyword",
		"continue": "TSKeyword",
		"declare": "TSKeyword",
		"default": "TSKeyword",
		"echo": "TSKeyword",
		"enddeclare": "TSKeyword",
		"extends": "TSKeyword",
		"final": "TSKeyword",
		"global": "TSKeyword",
		"implements": "TSKeyword",
		"insteadof": "TSKeyword",
		"interface": "TSKeyword",
		"namespace": "TSKeyword",
		"new": "TSKeyword",
		"private": "TSKeyword",
		"protected": "TSKeyword",
		"public": "TSKeyword",
		"static": "TSKeyword",
		"trait": "TSKeyword",
		"return": "TSKeywordReturn",
		"case": "TSConditional",
		"else": "TSConditional",
		"elseif": "TSConditional",
		"endif": "TSConditional",
		"endswitch": "TSConditional",
		"if": "TSConditional",
		"switch": "TSConditional",
		"match": "TSConditional",
		"do": "TSRepeat",
		"endfor": "TSRepeat",
		"endforeach": "TSRepeat",
		"endwhile": "TSRepeat",
		"for": "TSRepeat",
		"foreach": "TSRepeat",
		"while": "TSRepeat",
		"catch": "TSException",
		"finally": "TSException",
		"throw": "TSException",
		"try": "TSException",
		"include_once": "TSInclude",
		"include": "TSInclude",
		"require_once": "TSInclude",
		"require": "TSInclude",
		"use": "TSInclude",
		",": "TSPunctDelimiter",
		";": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		"?>": "TSPunctBracket",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"=": "TSOperator",
		"-": "TSOperator",
		"*": "TSOperator",
		"/": "TSOperator",
		"+": "TSOperator",
		"%": "TSOperator",
		"~": "TSOperator",
		"|": "TSOperator",
		"&": "TSOperator",
		"<<": "TSOperator",
		">>": "TSOperator",
		"->": "TSOperator",
		"<": "TSOperator",
		"<=": "TSOperator",
		">=": "TSOperator",
		">": "TSOperator",
		"==": "TSOperator",
		"!=": "TSOperator",
		"===": "TSOperator",
		"!==": "TSOperator",
		"!": "TSOperator",
		"&&": "TSOperator",
		"||": "TSOperator",
		"-=": "TSOperator",
		"+=": "TSOperator",
		"*=": "TSOperator",
		"/=": "TSOperator",
		"%=": "TSOperator",
		"|=": "TSOperator",
		"&=": "TSOperator",
		"--": "TSOperator",
		"++": "TSOperator",
	},
	"python": {
		"-": "TSOperator",
		"-=": "TSOperator",
		":=": "TSOperator",
		"!=": "TSOperator",
		"*": "TSOperator",
		"**": "TSOperator",
		"**=": "TSOperator",
		"*=": "TSOperator",
		"/": "TSOperator",
		"//": "TSOperator",
		"//=": "TSOperator",
		"/=": "TSOperator",
		"&": "TSOperator",
		"&=": "TSOperator",
		"%": "TSOperator",
		"%=": "TSOperator",
		"^": "TSOperator",
		"^=": "TSOperator",
		"+": "TSOperator",
		"+=": "TSOperator",
		"<": "TSOperator",
		"<<": "TSOperator",
		"<<=": "TSOperator",
		"<=": "TSOperator",
		"<>": "TSOperator",
		"=": "TSOperator",
		"==": "TSOperator",
		">": "TSOperator",
		">=": "TSOperator",
		">>": "TSOperator",
		">>=": "TSOperator",
		"@": "TSOperator",
		"@=": "TSOperator",
		"|": "TSOperator",
		"|=": "TSOperator",
		"~": "TSOperator",
		"->": "TSOperator",
		"and": "TSKeywordOperator",
		"in": "TSKeywordOperator",
		"is": "TSKeywordOperator",
		"not": "TSKeywordOperator",
		"or": "TSKeywordOperator",
		"del": "TSKeywordOperator",
		"def": "TSKeywordFunction",
		"lambda": "TSKeywordFunction",
		"assert": "TSKeyword",
		"async": "TSKeyword",
		"await": "TSKeyword",
		"class": "TSKeyword",
		"except": "TSKeyword",
		"exec": "TSKeyword",
		"finally": "TSKeyword",
		"global": "TSKeyword",
		"nonlocal": "TSKeyword",
		"pass": "TSKeyword",
		"print": "TSKeyword",
		"raise": "TSKeyword",
		"try": "TSKeyword",
		"with": "TSKeyword",
		"as": "TSKeyword",
		"return": "TSKeywordReturn",
		"yield": "TSKeywordReturn",
		"from": "TSInclude",
		"import": "TSInclude",
		"if": "TSConditional",
		"elif": "TSConditional",
		"else": "TSConditional",
		"for": "TSRepeat",
		"while": "TSRepeat",
		"break": "TSRepeat",
		"continue": "TSRepeat",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		",": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		":": "TSPunctDelimiter",
	},
	"ruby": {
		"alias": "TSKeyword",
		"begin": "TSKeyword",
		"break": "TSKeyword",
		"class": "TSKeyword",
		"def": "TSKeyword",
		"do": "TSKeyword",
		"end": "TSKeyword",
		"ensure": "TSKeyword",
		"module": "TSKeyword",
		"next": "TSKeyword",
		"rescue": "TSKeyword",
		"retry": "TSKeyword",
		"then": "TSKeyword",
		"return": "TSKeywordReturn",
		"yield": "TSKeywordReturn",
		"and": "TSKeywordOperator",
		"or": "TSKeywordOperator",
		"in": "TSKeywordOperator",
		"case": "TSConditional",
		"else": "TSConditional",
		"elsif": "TSConditional",
		"if": "TSConditional",
		"unless": "TSConditional",
		"when": "TSConditional",
		"for": "TSRepeat",
		"until": "TSRepeat",
		"while": "TSRepeat",
		"defined?": "TSFunction",
		"=": "TSOperator",
		"=>": "TSOperator",
		"->": "TSOperator",
		"+": "TSOperator",
		"-": "TSOperator",
		"*": "TSOperator",
		"/": "TSOperator",
		",": "TSPunctDelimiter",
		";": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"%w(": "TSPunctBracket",
		"%i(": "TSPunctBracket",
	},
	"rust": {
		"$": "TSFunctionMacro",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"::": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		";": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"use": "TSInclude",
		"mod": "TSInclude",
		"break": "TSKeyword",
		"const": "TSKeyword",
		"default": "TSKeyword",
		"dyn": "TSKeyword",
		"enum": "TSKeyword",
		"extern": "TSKeyword",
		"impl": "TSKeyword",
		"let": "TSKeyword",
		"macro_rules!": "TSKeyword",
		"match": "TSKeyword",
		"move": "TSKeyword",
		"pub": "TSKeyword",
		"ref": "TSKeyword",
		"static": "TSKeyword",
		"struct": "TSKeyword",
		"trait": "TSKeyword",
		"type": "TSKeyword",
		"union": "TSKeyword",
		"unsafe": "TSKeyword",
		"async": "TSKeyword",
		"await": "TSKeyword",
		"where": "TSKeyword",
		"return": "TSKeywordReturn",
		"fn": "TSKeywordFunction",
		"continue": "TSConditional",
		"else": "TSConditional",
		"if": "TSConditional",
		"for": "TSRepeat",
		"in": "TSRepeat",
		"loop": "TSRepeat",
		"while": "TSRepeat",
		"as": "TSKeywordOperator",
		"*": "TSOperator",
		"'": "TSOperator",
		"->": "TSOperator",
		"=>": "TSOperator",
		"<=": "TSOperator",
		"=": "TSOperator",
		"==": "TSOperator",
		"!": "TSOperator",
		"!=": "TSOperator",
		"%": "TSOperator",
		"%=": "TSOperator",
		"&": "TSOperator",
		"&=": "TSOperator",
		"&&": "TSOperator",
		"|": "TSOperator",
		"|=": "TSOperator",
		"||": "TSOperator",
		"^": "TSOperator",
		"^=": "TSOperator",
		"*=": "TSOperator",
		"-": "TSOperator",
		"-=": "TSOperator",
		"+": "TSOperator",
		"+=": "TSOperator",
		"/": "TSOperator",
		"/=": "TSOperator",
		">": "TSOperator",
		"<": "TSOperator",
		">=": "TSOperator",
		">>": "TSOperator",
		"<<": "TSOperator",
		">>=": "TSOperator",
		"@": "TSOperator",
		"..": "TSOperator",
		"..=": "TSOperator",
		"?": "TSOperator",
	},
	"svelte": {
		"<": "TSTagDelimiter",
		">": "TSTagDelimiter",
		"</": "TSTagDelimiter",
		"/>": "TSTagDelimiter",
		"=": "TSOperator",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"#": "TSTagDelimiter",
		":": "TSTagDelimiter",
		"/": "TSTagDelimiter",
		"@": "TSTagDelimiter",
	},
	"toml": {
	},
	"tsx": {
		"abstract": "TSKeyword",
		"declare": "TSKeyword",
		"enum": "TSKeyword",
		"export": "TSKeyword",
		"implements": "TSKeyword",
		"interface": "TSKeyword",
		"keyof": "TSKeyword",
		"namespace": "TSKeyword",
		"private": "TSKeyword",
		"protected": "TSKeyword",
		"public": "TSKeyword",
		"type": "TSKeyword",
		"readonly": "TSKeyword",
	},
	"typescript": {
		"...": "TSPunctSpecial",
		";": "TSPunctDelimiter",
		".": "TSPunctDelimiter",
		",": "TSPunctDelimiter",
		"?.": "TSPunctDelimiter",
		"--": "TSOperator",
		"-": "TSOperator",
		"-=": "TSOperator",
		"&&": "TSOperator",
		"+": "TSOperator",
		"++": "TSOperator",
		"+=": "TSOperator",
		"&=": "TSOperator",
		"/=": "TSOperator",
		"**=": "TSOperator",
		"<<=": "TSOperator",
		"<": "TSOperator",
		"<=": "TSOperator",
		"<<": "TSOperator",
		"=": "TSOperator",
		"==": "TSOperator",
		"===": "TSOperator",
		"!=": "TSOperator",
		"!==": "TSOperator",
		"=>": "TSOperator",
		">": "TSOperator",
		">=": "TSOperator",
		">>": "TSOperator",
		"||": "TSOperator",
		"%": "TSOperator",
		"%=": "TSOperator",
		"*": "TSOperator",
		"**": "TSOperator",
		">>>": "TSOperator",
		"&": "TSOperator",
		"|": "TSOperator",
		"^": "TSOperator",
		"??": "TSOperator",
		"*=": "TSOperator",
		">>=": "TSOperator",
		">>>=": "TSOperator",
		"^=": "TSOperator",
		"|=": "TSOperator",
		"&&=": "TSOperator",
		"||=": "TSOperator",
		"??=": "TSOperator",
		"(": "TSPunctBracket",
		")": "TSPunctBracket",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"if": "TSConditional",
		"else": "TSConditional",
		"switch": "TSConditional",
		"case": "TSConditional",
		"default": "TSConditional",
		"import": "TSInclude",
		"from": "TSInclude",
		"as": "TSInclude",
		"for": "TSRepeat",
		"of": "TSRepeat",
		"do": "TSRepeat",
		"while": "TSRepeat",
		"continue": "TSRepeat",
		"async": "TSKeyword",
		"await": "TSKeyword",
		"break": "TSKeyword",
		"class": "TSKeyword",
		"const": "TSKeyword",
		"debugger": "TSKeyword",
		"export": "TSKeyword",
		"extends": "TSKeyword",
		"get": "TSKeyword",
		"in": "TSKeyword",
		"instanceof": "TSKeyword",
		"let": "TSKeyword",
		"set": "TSKeyword",
		"static": "TSKeyword",
		"target": "TSKeyword",
		"typeof": "TSKeyword",
		"var": "TSKeyword",
		"void": "TSKeyword",
		"with": "TSKeyword",
		"return": "TSKeywordReturn",
		"yield": "TSKeywordReturn",
		"function": "TSKeywordFunction",
		"new": "TSKeywordOperator",
		"delete": "TSKeywordOperator",
		"throw": "TSException",
		"try": "TSException",
		"catch": "TSException",
		"finally": "TSException",
		"abstract": "TSKeyword",
		"declare": "TSKeyword",
		"enum": "TSKeyword",
		"implements": "TSKeyword",
		"interface": "TSKeyword",
		"keyof": "TSKeyword",
		"namespace": "TSKeyword",
		"private": "TSKeyword",
		"protected": "TSKeyword",
		"public": "TSKeyword",
		"type": "TSKeyword",
		"readonly": "TSKeyword",
	},
	"yaml": {
		",": "TSPunctDelimiter",
		"-": "TSPunctDelimiter",
		":": "TSPunctDelimiter",
		">": "TSPunctDelimiter",
		"?": "TSPunctDelimiter",
		"|": "TSPunctDelimiter",
		"[": "TSPunctBracket",
		"]": "TSPunctBracket",
		"{": "TSPunctBracket",
		"}": "TSPunctBracket",
		"*": "TSPunctSpecial",
		"&": "TSPunctSpecial",
	},
}
